services:
  eureka:
#    build: ./eureka-server
#    build:
#      context: .
#      dockerfile: "./eureka-server/Dockerfile"
    image: eureka-test
#    container_name: eureka-test
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761" ]
      start_period: 10s
      interval: 1s
      timeout: 15s
      retries: 5

  gateway:
#    build: ./gateway
    image: gateway-test
    ports:
      - "8765:8765"
    depends_on:
      eureka:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8765/api/v1/healthcheck" ]
      start_period: 15s
      interval: 1s
      timeout: 15s
      retries: 5

  business-logic:
#    build: ./business-logic
    image: business-logic-test
    ports:
      - "8085:8085"
    depends_on:
      gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy

  worker1:
#    build: ./worker
    image: worker-test
    ports:
      - "8084:8084"
    depends_on:
      gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy

  worker2:
    #    build: ./worker
    image: worker-test
    ports:
      - "8087:8084"
    depends_on:
      gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: this1pass
      POSTGRES_DB: solequat
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres -d solequat
      start_period: 10s
      interval: 1s
      timeout: 15s
      retries: 5

volumes:
  postgres_data: